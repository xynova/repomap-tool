#!/bin/bash
# cli_examples.sh - Command-line examples for docker-repomap

echo "RepoMap-Tool Command-Line Examples"
echo "===================================="

# Example project path (change this to your actual project)
PROJECT_PATH="/path/to/your/project"

echo ""
echo "1. Basic RepoMap Generation"
echo "---------------------------"
echo "Generate a basic repo map with default settings:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project"
echo ""

echo "2. Custom Token Budget"
echo "----------------------"
echo "Generate repo map with 2048 tokens:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --map-tokens 2048"
echo ""

echo "3. Dynamic Context with Mentioned Files"
echo "----------------------------------------"
echo "Generate repo map focusing on specific files:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --mentioned-files 'src/main.py,src/utils/helpers.py'"
echo ""

echo "4. Dynamic Context with Mentioned Identifiers"
echo "----------------------------------------------"
echo "Generate repo map focusing on specific functions/classes:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --mentioned-idents 'process_data,User,authenticate'"
echo ""

echo "5. Chat Files Context"
echo "---------------------"
echo "Generate repo map considering files currently in chat:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --chat-files 'src/auth.py,src/models.py'"
echo ""

echo "6. Combined Dynamic Context"
echo "---------------------------"
echo "Generate repo map with all context types:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project \\"
echo "  --map-tokens 2048 \\"
echo "  --chat-files 'src/auth.py' \\"
echo "  --mentioned-files 'src/main.py' \\"
echo "  --mentioned-idents 'process_data,authenticate'"
echo ""

echo "7. Force Refresh"
echo "----------------"
echo "Force refresh the repo map (ignore cache):"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --force-refresh"
echo ""

echo "8. Cache Statistics"
echo "-------------------"
echo "Show cache statistics:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --cache-stats"
echo ""

echo "9. Clear Cache"
echo "--------------"
echo "Clear the cache:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --clear-cache"
echo ""

echo "10. Custom Output File"
echo "----------------------"
echo "Save repo map to custom location:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --output /tmp/my_repo_map.txt"
echo ""

echo "11. Verbose Output"
echo "------------------"
echo "Generate repo map with verbose logging:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project --verbose"
echo ""

echo "12. Complex Example"
echo "-------------------"
echo "Complex example with all options:"
echo "docker run --rm -v $PROJECT_PATH:/project repomap-tool /project \\"
echo "  --map-tokens 4096 \\"
echo "  --chat-files 'src/auth.py,src/models.py' \\"
echo "  --mentioned-files 'src/main.py,src/utils/helpers.py' \\"
echo "  --mentioned-idents 'process_data,User,authenticate,validate_input' \\"
echo "  --force-refresh \\"
echo "  --verbose \\"
echo "  --output /tmp/complex_repo_map.txt"
echo ""

echo "13. Using with Different Projects"
echo "---------------------------------"
echo "Generate repo map for a Python project:"
echo "docker run --rm -v /path/to/python/project:/project repomap-tool /project"
echo ""
echo "Generate repo map for a JavaScript project:"
echo "docker run --rm -v /path/to/js/project:/project repomap-tool /project"
echo ""
echo "Generate repo map for a Go project:"
echo "docker run --rm -v /path/to/go/project:/project repomap-tool /project"
echo ""

echo "14. Integration with Scripts"
echo "----------------------------"
echo "Use in a bash script:"
echo "#!/bin/bash"
echo "REPO_MAP=\$(docker run --rm -v \$PROJECT_PATH:/project repomap-tool /project --map-tokens 2048)"
echo "echo \"Repo map generated with \${#REPO_MAP} characters\""
echo ""

echo "15. One-liner Examples"
echo "----------------------"
echo "Quick overview (1024 tokens):"
echo "docker run --rm -v \$PWD:/project repomap-tool /project"
echo ""
echo "Detailed analysis (4096 tokens):"
echo "docker run --rm -v \$PWD:/project repomap-tool /project --map-tokens 4096"
echo ""
echo "Focus on authentication:"
echo "docker run --rm -v \$PWD:/project repomap-tool /project --mentioned-idents 'auth,login,authenticate'"
echo ""
echo "Focus on main files:"
echo "docker run --rm -v \$PWD:/project repomap-tool /project --mentioned-files 'main.py,app.py,index.js'"
echo ""
