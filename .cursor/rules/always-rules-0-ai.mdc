---
alwaysApply: true
---

# ü§ñ **AI REASONING PROTOCOL**

## **Before Taking Any Setup Action:**
**ALWAYS provide step-by-step reasoning that:**
1. States what setup action you're about to take
2. Explains which rules from this document apply
3. Shows how you've considered those rules in your approach
4. Outlines your specific plan and next steps

---

## **CRITICAL LANGUAGE REQUIREMENTS**

### **English-Only Policy (MANDATORY):**
- **MUST USE ENGLISH ONLY** - All code, comments, variables, functions, strings, and documentation
- **DIRECTORIES AND PATHS** - All directory names, file paths, and system references must use English
- **THINKING PROCESS** - All AI reasoning, explanations, and internal processing must use English
- **NO EXCEPTIONS** - Never use non-English characters, words, or symbols anywhere
- **AI EFFICIENCY** - Use simple, clear English for better AI processing
- **CONSISTENCY** - Same English terms throughout the entire codebase

### **AI-Optimized English Standards:**
- **Simple words** - Use basic English vocabulary
- **Clear structure** - Write in short, direct sentences
- **Standard terms** - Use common programming English words
- **No slang** - Avoid informal language or abbreviations
- **Consistent naming** - Same English word for same concept

### **Examples:**
‚úÖ **CORRECT:** `userName`, `getData()`, `// Get user information`  
‚ùå **WRONG:** `nombreUsuario`, `obtenerDatos()`, `// Obtener informaci√≥n del usuario`  
‚ùå **WRONG:** `user_name`, `get_data()`, `// Get user info` (inconsistent style)

---

## **CLONING LIBRARY SOURCE CODE FOR BETTER UNDERSTANDING AND INTERFACE DEVELOPMENT**

1. **When to Clone:**
   - When you need to understand the internal structure of a library
   - When you need to modify or extend a library's functionality
   - When you need to debug a library's behavior
   - When you need to integrate a library into your project

2. **Where to Store Cloned Repositories:**
   - Use a temporary folder (e.g., `tmp/`) for cloned repositories
   - Keep cloned repositories organized by project or library name
   - Use a version control system (e.g., Git) to manage cloned repositories

3. **Specific Examples:**
   - Letta library: `tmp/letta-library`
   - TUI library: `tmp/tui-library`

4. **Benefits and Expected Outcomes:**
   - Better understanding of library code
   - Ability to modify and extend library functionality
   - Improved debugging capabilities
   - Faster development of new features

5. **DO and DON'T Guidelines:**
   - **DO:**
     - Clone only the necessary files and directories
     - Keep cloned repositories up-to-date
     - Use descriptive commit messages
     - Document any changes made to the cloned code
   - **DON'T:**
     - Modify the original library files
     - Commit directly to the original library repository
     - Share cloned repositories publicly
     - Modify or delete cloned repositories without permission
