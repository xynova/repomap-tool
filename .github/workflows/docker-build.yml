name: Docker Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docker/**'
      - 'src/**'
      - 'pyproject.toml'
      - 'setup.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docker/**'
      - 'src/**'
      - 'pyproject.toml'
      - 'setup.py'

jobs:
  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v4

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and test Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: false
        tags: repomap-tool:test
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Test Docker image
      run: |
        docker run --rm repomap-tool:test repomap-tool --help

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docker-integration-test:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image for integration tests
      run: |
        docker build -f docker/Dockerfile -t repomap-tool:integration .

    - name: Run Docker integration tests
      run: |
        # Test basic functionality
        docker run --rm repomap-tool:integration repomap-tool --help
        
        # Test with a sample project
        mkdir -p test-docker-project
        echo "print('Hello, World!')" > test-docker-project/test.py
        
        # Run analysis on the test project
        docker run --rm \
          -v $(pwd)/test-docker-project:/workspace \
          -w /workspace \
          repomap-tool:integration \
          repomap-tool analyze . --output-format json || true

    - name: Cleanup
      run: |
        docker rmi repomap-tool:integration || true
        rm -rf test-docker-project
